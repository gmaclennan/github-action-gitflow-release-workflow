name: "Draft new release"

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+-rc
      - v[0-9]+.[0-9]+.[0-9]+-RC

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
            GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v2

      - name: Extract version from tag name
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          # Because of the match above (on.push.tags) we know this will work
          VERSION=${TAG%-*}
          echo "::set-env name=RELEASE_VERSION::$VERSION"

      - name: Create release branch
        run: git checkout -b release/${{ env.RELEASE_VERSION }}

      - name: Update changelog
        uses: thomaseizinger/keep-a-changelog-new-release@1.1.0
        with:
          version: ${{ env.RELEASE_VERSION }}

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      # This step will differ depending on your project setup
      # Fortunately, yarn has a built-in command for doing this!
      - name: Bump version in package.json
        run: yarn version --new-version ${{ env.RELEASE_VERSION }} --no-git-tag-version

      - name: Commit changelog and manifest files
        id: make-commit
        run: |
          git add CHANGELOG.md package.json
          git commit --message "Prepare release ${{ env.RELEASE_VERSION }}"

          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Push new branch
        run: git push origin release/${{ env.RELEASE_VERSION }}

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          head: release/${{ env.RELEASE_VERSION }}
          base: master
          title: Release ${{ env.RELEASE_VERSION }}
          body: |
            This PR was created in response to this tag: #${{ github.event.push.ref }}.
            I've updated the changelog and bumped the versions in the manifest files in this commit: ${{ steps.make-commit.outputs.commit }}.

            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
